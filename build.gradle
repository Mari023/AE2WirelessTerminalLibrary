buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "fabric-loom" version "1.0-SNAPSHOT"
    id "com.diffplug.spotless" version "5.12.4"
}

version = project.mod_version + "-SNAPSHOT"

ext.pr = System.getenv('PR_NUMBER') ?: ""
if (ext.pr) {
    version = project.mod_version + "+pr" + ext.pr
}

ext.tag = System.getenv('TAG') ?: ""
if (ext.tag) {
    if (!ext.tag.startsWith("fabric/")) {
        throw new GradleException("Tags for the fabric version should start with fabric/: ${ext.tag}")
    }
    version = ext.tag.substring("fabric/".length())
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modCompileOnly("dev.emi:trinkets:${rootProject.trinkets_version}") { transitive false }
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    //modRuntimeOnly "dev.emi:trinkets:${rootProject.trinkets_version}"
    modRuntimeOnly("me.shedaniel.cloth:cloth-config-fabric:${project.cloth}")
    modApi("com.terraformersmc:modmenu:${project.mod_menu_version}")
    modImplementation "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    modImplementation("appeng:appliedenergistics2-fabric:${rootProject.ae2_fabric_version}") {
        exclude group: "mezz.jei"
        exclude group: "me.shedaniel"
        exclude group: "net.fabricmc.fabric-api"
    }

    if (project.runtime_itemlist_mod == "jei") {
        modImplementation("mezz.jei:jei-${jei_minecraft_version}-fabric:${jei_version}") {
            exclude group: "mezz.jei"
        }

        modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
            exclude group: "net.fabricmc.fabric-api"
        }
    } else if (project.runtime_itemlist_mod == "rei") {
        modCompileOnly("mezz.jei:jei-${jei_minecraft_version}-fabric:${jei_version}") {
            exclude group: "mezz.jei"
        }

        modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
            exclude group: "net.fabricmc.fabric-api"
        }
    } else {
        throw new GradleException("Invalid runtime_itemlist_mod value: " + project.runtime_itemlist_mod)
    }

}


archivesBaseName = rootProject.archives_base_name
version = rootProject.version
group = rootProject.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup "net.fabricmc.fabric-api"
            includeGroup "appeng"
            includeGroup "mezz.jei"
        }
    }
    maven {
        url "https://maven.bai.lol"
        content {
            includeGroup "mcp.mobius.waila"
            includeGroup "lol.bai"
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "dev.architectury"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "com.terraformersmc"
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
        content {
            includeGroup "dev.onyxstudios.cardinal-components-api"
        }
    }
    maven {
        url "https://maven.parchmentmc.net/"
        content {
            includeGroup "org.parchmentmc.data"
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
        content {
            includeGroup "top.theillusivec4.curios"
        }
    }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    finalizedBy 'remapJar'
}

processResources {
    inputs.property "version", project.version
    inputs.property "ae2_version", rootProject.ae2_fabric_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version, "ae2_version": rootProject.ae2_fabric_version
    }
}

spotless {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    java {
        target '*/src/*/java/**/*.java'

        endWithNewline()
        indentWithSpaces()
        removeUnusedImports()
        toggleOffOn()
        eclipse().configFile 'codeformat/codeformat.xml'
        importOrderFile 'codeformat/ae2wtlib.importorder'
    }

    format 'json', {
        target '*/src/*/resources/**/*.json'
        prettier().config(['parser': 'json'])
    }
}
